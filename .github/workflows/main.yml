  codeql_import_results:
    name: Publish CodeQL Scan in DefectDojo
    runs-on: ubuntu-latest
    needs: codeql_create_engagement
    env:
      DEFECTDOJO_URL: "https://0ff1a91be414.ngrok-free.app"
      DEFECTDOJO_TOKEN: "45989479827355dd9eaa6cfb7c0b2f7a86ffd5cb"
      DEFECTDOJO_SCAN_MINIMUM_SEVERITY: "Info"
      DEFECTDOJO_SCAN_ACTIVE: "true"
      DEFECTDOJO_SCAN_VERIFIED: "false"
      DEFECTDOJO_SCAN_CLOSE_OLD_FINDINGS: "true"
      DEFECTDOJO_SCAN_PUSH_TO_JIRA: "false"
      DEFECTDOJO_SCAN_ENVIRONMENT: "Default"
      DEFECTDOJO_SCAN_TEST_TYPE: "SARIF"
      DEFECTDOJO_PRODUCT_TYPE: "Github Actions"
      DEFECTDOJO_PRODUCT_NAME: "Prueba Boreal"
      SQUAD: "SquadPrueba"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl

      - name: Set scan date
        run: echo "TODAY=$(date +%Y-%m-%d)" >> $GITHUB_ENV

      - name: Download CodeQL results artifact
        uses: actions/download-artifact@v4
        with:
          name: codeql-results
          path: .

      - name: Verify SARIF file exists
        run: |
          ls -la .
          test -f codeql-results.sarif || (echo "No se encontr√≥ codeql-results.sarif" && exit 1)

      - name: Upload CodeQL Scan to DefectDojo
        run: |
          curl -sS -X POST "${DEFECTDOJO_URL}/api/v2/import-scan/" \
          -H "accept: application/json" \
          -H "Content-Type: multipart/form-data" \
          -H "Authorization: Token ${DEFECTDOJO_TOKEN}" \
          -F "scan_date=${TODAY}" \
          -F "minimum_severity=${DEFECTDOJO_SCAN_MINIMUM_SEVERITY}" \
          -F "active=${DEFECTDOJO_SCAN_ACTIVE}" \
          -F "verified=${DEFECTDOJO_SCAN_VERIFIED}" \
          -F "scan_type=${DEFECTDOJO_SCAN_TEST_TYPE}" \
          -F "product_name=${DEFECTDOJO_PRODUCT_NAME}" \
          -F "file=@codeql-results.sarif;type=application/sarif+json" \
          -F "engagement_name=CodeQL_#${{ github.run_id }}" \
          -F "close_old_findings=${DEFECTDOJO_SCAN_CLOSE_OLD_FINDINGS}" \
          -F "push_to_jira=${DEFECTDOJO_SCAN_PUSH_TO_JIRA}" \
          -F "tags=squad=${SQUAD},repo=${GITHUB_REPOSITORY}" \
          -F "findings_group=${SQUAD}" \
          -o dojo_response.json -w "\nHTTP %{http_code}\n"
          echo "=== Respuesta DefectDojo ==="
          cat dojo_response.json || true
