name: "CodeQL Analysis"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    - cron: '0 3 * * 1'  # Ejecutar cada lunes a las 3 AM UTC

jobs:
  analyze:
    name: Analyze Code with CodeQL
    runs-on: ubuntu-latest

    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: "javascript,python"  # Ajusta según tu proyecto

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: codeql-results.sarif  # Guardar en el directorio raíz con este nombre

      - name: Upload CodeQL results as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: codeql-results
          path: codeql-results.sarif

  build:
      name: Trivy Scan
      runs-on: ubuntu-20.04
      permissions:
        security-events: write  # Add this line to ensure proper permissions

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Build an image from Dockerfile
          run: |
            docker build -t kali-standard .

        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: 'kali-standard'
            format: 'sarif'
            output: 'trivy-results.sarif'
            exit-code: 0   # Evita fallos si se encuentran vulnerabilidades
            severity: 'HIGH,CRITICAL'

        - name: Upload Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: 'trivy-results.sarif'

        - name: Upload CodeQL results as an artifact
          uses: actions/upload-artifact@v4
          with:
            name: trivy-results
            path: trivy-results.sarif